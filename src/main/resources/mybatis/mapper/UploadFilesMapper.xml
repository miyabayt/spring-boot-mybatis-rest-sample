<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bigtreetc.mybatis.sample.domain.mapper.UploadFilesMapper">
  <resultMap id="BaseResultMap" type="com.bigtreetc.mybatis.sample.domain.model.UploadFiles">
    <id column="upload_file_id" jdbcType="BIGINT" property="uploadFileId" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="original_file_name" jdbcType="VARCHAR" property="originalFileName" />
    <result column="content_type" jdbcType="VARCHAR" property="contentType" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="version" jdbcType="BIGINT" property="version" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bigtreetc.mybatis.sample.domain.model.UploadFiles">
    <result column="content" jdbcType="LONGVARBINARY" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    upload_file_id, file_name, original_file_name, content_type, created_by, created_at, 
    updated_by, updated_at, version
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.bigtreetc.mybatis.sample.domain.model.UploadFilesExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from upload_files
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.bigtreetc.mybatis.sample.domain.model.UploadFilesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from upload_files
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from upload_files
    where upload_file_id = #{uploadFileId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from upload_files
    where upload_file_id = #{uploadFileId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bigtreetc.mybatis.sample.domain.model.UploadFilesExample">
    delete from upload_files
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bigtreetc.mybatis.sample.domain.model.UploadFiles">
    insert into upload_files (upload_file_id, file_name, original_file_name, 
      content_type, created_by, created_at, 
      updated_by, updated_at, version, 
      content)
    values (#{uploadFileId,jdbcType=BIGINT}, #{fileName,jdbcType=VARCHAR}, #{originalFileName,jdbcType=VARCHAR}, 
      #{contentType,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=VARCHAR}, #{updatedAt,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}, 
      #{content,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.bigtreetc.mybatis.sample.domain.model.UploadFiles">
    insert into upload_files
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uploadFileId != null">
        upload_file_id,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="originalFileName != null">
        original_file_name,
      </if>
      <if test="contentType != null">
        content_type,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uploadFileId != null">
        #{uploadFileId,jdbcType=BIGINT},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="originalFileName != null">
        #{originalFileName,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        #{contentType,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bigtreetc.mybatis.sample.domain.model.UploadFilesExample" resultType="java.lang.Long">
    select count(*) from upload_files
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update upload_files
    <set>
      <if test="record.uploadFileId != null">
        upload_file_id = #{record.uploadFileId,jdbcType=BIGINT},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.originalFileName != null">
        original_file_name = #{record.originalFileName,jdbcType=VARCHAR},
      </if>
      <if test="record.contentType != null">
        content_type = #{record.contentType,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update upload_files
    set upload_file_id = #{record.uploadFileId,jdbcType=BIGINT},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      original_file_name = #{record.originalFileName,jdbcType=VARCHAR},
      content_type = #{record.contentType,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT},
      content = #{record.content,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update upload_files
    set upload_file_id = #{record.uploadFileId,jdbcType=BIGINT},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      original_file_name = #{record.originalFileName,jdbcType=VARCHAR},
      content_type = #{record.contentType,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bigtreetc.mybatis.sample.domain.model.UploadFiles">
    update upload_files
    <set>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="originalFileName != null">
        original_file_name = #{originalFileName,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        content_type = #{contentType,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where upload_file_id = #{uploadFileId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bigtreetc.mybatis.sample.domain.model.UploadFiles">
    update upload_files
    set file_name = #{fileName,jdbcType=VARCHAR},
      original_file_name = #{originalFileName,jdbcType=VARCHAR},
      content_type = #{contentType,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARBINARY}
    where upload_file_id = #{uploadFileId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bigtreetc.mybatis.sample.domain.model.UploadFiles">
    update upload_files
    set file_name = #{fileName,jdbcType=VARCHAR},
      original_file_name = #{originalFileName,jdbcType=VARCHAR},
      content_type = #{contentType,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT}
    where upload_file_id = #{uploadFileId,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.bigtreetc.mybatis.sample.domain.model.UploadFilesExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from upload_files
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.bigtreetc.mybatis.sample.domain.model.UploadFilesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from upload_files
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <insert id="upsertSelective" parameterType="com.bigtreetc.mybatis.sample.domain.model.UploadFiles">
    insert into upload_files
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uploadFileId != null">
        upload_file_id,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="originalFileName != null">
        original_file_name,
      </if>
      <if test="contentType != null">
        content_type,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uploadFileId != null">
        #{uploadFileId,jdbcType=BIGINT},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="originalFileName != null">
        #{originalFileName,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        #{contentType,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARBINARY},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="uploadFileId != null">
        upload_file_id = #{uploadFileId,jdbcType=BIGINT},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="originalFileName != null">
        original_file_name = #{originalFileName,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        content_type = #{contentType,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <insert id="upsert" parameterType="com.bigtreetc.mybatis.sample.domain.model.UploadFiles">
    insert into upload_files
    (upload_file_id, file_name, original_file_name, content_type, created_by, created_at, 
      updated_by, updated_at, version)
    values
    (#{uploadFileId,jdbcType=BIGINT}, #{fileName,jdbcType=VARCHAR}, #{originalFileName,jdbcType=VARCHAR}, 
      #{contentType,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=VARCHAR}, #{updatedAt,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}
      )
    on duplicate key update 
    upload_file_id = #{uploadFileId,jdbcType=BIGINT}, 
    file_name = #{fileName,jdbcType=VARCHAR}, 
    original_file_name = #{originalFileName,jdbcType=VARCHAR}, 
    content_type = #{contentType,jdbcType=VARCHAR}, 
    created_by = #{createdBy,jdbcType=VARCHAR}, 
    created_at = #{createdAt,jdbcType=TIMESTAMP}, 
    updated_by = #{updatedBy,jdbcType=VARCHAR}, 
    updated_at = #{updatedAt,jdbcType=TIMESTAMP}, 
    version = #{version,jdbcType=BIGINT}
  </insert>
  <insert id="upsertWithBLOBs" parameterType="com.bigtreetc.mybatis.sample.domain.model.UploadFiles">
    insert into upload_files
    (upload_file_id, file_name, original_file_name, content_type, created_by, created_at, 
      updated_by, updated_at, version, content)
    values
    (#{uploadFileId,jdbcType=BIGINT}, #{fileName,jdbcType=VARCHAR}, #{originalFileName,jdbcType=VARCHAR}, 
      #{contentType,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=VARCHAR}, #{updatedAt,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}, 
      #{content,jdbcType=LONGVARBINARY})
    on duplicate key update 
    upload_file_id = #{uploadFileId,jdbcType=BIGINT}, 
    file_name = #{fileName,jdbcType=VARCHAR}, 
    original_file_name = #{originalFileName,jdbcType=VARCHAR}, 
    content_type = #{contentType,jdbcType=VARCHAR}, 
    created_by = #{createdBy,jdbcType=VARCHAR}, 
    created_at = #{createdAt,jdbcType=TIMESTAMP}, 
    updated_by = #{updatedBy,jdbcType=VARCHAR}, 
    updated_at = #{updatedAt,jdbcType=TIMESTAMP}, 
    version = #{version,jdbcType=BIGINT}, 
    content = #{content,jdbcType=LONGVARBINARY}
  </insert>
</mapper>