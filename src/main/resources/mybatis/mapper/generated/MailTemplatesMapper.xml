<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bigtreetc.mybatis.sample.domain.mapper.generated.MailTemplatesMapper">
  <resultMap id="BaseResultMap" type="com.bigtreetc.mybatis.sample.domain.model.generated.MailTemplates">
    <id column="mail_template_id" jdbcType="BIGINT" property="mailTemplateId" />
    <result column="template_code" jdbcType="VARCHAR" property="templateCode" />
    <result column="category_code" jdbcType="VARCHAR" property="categoryCode" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="version" jdbcType="BIGINT" property="version" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bigtreetc.mybatis.sample.domain.model.generated.MailTemplates">
    <result column="template_body" jdbcType="LONGVARCHAR" property="templateBody" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mail_template_id, template_code, category_code, subject, created_by, created_at, 
    updated_by, updated_at, version
  </sql>
  <sql id="Blob_Column_List">
    template_body
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.bigtreetc.mybatis.sample.domain.model.generated.MailTemplatesExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mail_templates
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.bigtreetc.mybatis.sample.domain.model.generated.MailTemplatesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mail_templates
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mail_templates
    where mail_template_id = #{mailTemplateId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mail_templates
    where mail_template_id = #{mailTemplateId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bigtreetc.mybatis.sample.domain.model.generated.MailTemplatesExample">
    delete from mail_templates
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bigtreetc.mybatis.sample.domain.model.generated.MailTemplates">
    insert into mail_templates (mail_template_id, template_code, category_code, 
      subject, created_by, created_at, 
      updated_by, updated_at, version, 
      template_body)
    values (#{mailTemplateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{categoryCode,jdbcType=VARCHAR}, 
      #{subject,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=VARCHAR}, #{updatedAt,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}, 
      #{templateBody,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bigtreetc.mybatis.sample.domain.model.generated.MailTemplates">
    insert into mail_templates
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mailTemplateId != null">
        mail_template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="categoryCode != null">
        category_code,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="templateBody != null">
        template_body,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mailTemplateId != null">
        #{mailTemplateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="categoryCode != null">
        #{categoryCode,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="templateBody != null">
        #{templateBody,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bigtreetc.mybatis.sample.domain.model.generated.MailTemplatesExample" resultType="java.lang.Long">
    select count(*) from mail_templates
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mail_templates
    <set>
      <if test="record.mailTemplateId != null">
        mail_template_id = #{record.mailTemplateId,jdbcType=BIGINT},
      </if>
      <if test="record.templateCode != null">
        template_code = #{record.templateCode,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryCode != null">
        category_code = #{record.categoryCode,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.templateBody != null">
        template_body = #{record.templateBody,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update mail_templates
    set mail_template_id = #{record.mailTemplateId,jdbcType=BIGINT},
      template_code = #{record.templateCode,jdbcType=VARCHAR},
      category_code = #{record.categoryCode,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT},
      template_body = #{record.templateBody,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mail_templates
    set mail_template_id = #{record.mailTemplateId,jdbcType=BIGINT},
      template_code = #{record.templateCode,jdbcType=VARCHAR},
      category_code = #{record.categoryCode,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bigtreetc.mybatis.sample.domain.model.generated.MailTemplates">
    update mail_templates
    <set>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="categoryCode != null">
        category_code = #{categoryCode,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="templateBody != null">
        template_body = #{templateBody,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where mail_template_id = #{mailTemplateId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bigtreetc.mybatis.sample.domain.model.generated.MailTemplates">
    update mail_templates
    set template_code = #{templateCode,jdbcType=VARCHAR},
      category_code = #{categoryCode,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      template_body = #{templateBody,jdbcType=LONGVARCHAR}
    where mail_template_id = #{mailTemplateId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bigtreetc.mybatis.sample.domain.model.generated.MailTemplates">
    update mail_templates
    set template_code = #{templateCode,jdbcType=VARCHAR},
      category_code = #{categoryCode,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT}
    where mail_template_id = #{mailTemplateId,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    insert into mail_templates
    (mail_template_id, template_code, category_code, subject, created_by, created_at, 
      updated_by, updated_at, version, template_body)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.mailTemplateId,jdbcType=BIGINT}, #{item.templateCode,jdbcType=VARCHAR}, #{item.categoryCode,jdbcType=VARCHAR}, 
        #{item.subject,jdbcType=VARCHAR}, #{item.createdBy,jdbcType=VARCHAR}, #{item.createdAt,jdbcType=TIMESTAMP}, 
        #{item.updatedBy,jdbcType=VARCHAR}, #{item.updatedAt,jdbcType=TIMESTAMP}, #{item.version,jdbcType=BIGINT}, 
        #{item.templateBody,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into mail_templates (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'mail_template_id'.toString() == column.value">
          #{item.mailTemplateId,jdbcType=BIGINT}
        </if>
        <if test="'template_code'.toString() == column.value">
          #{item.templateCode,jdbcType=VARCHAR}
        </if>
        <if test="'category_code'.toString() == column.value">
          #{item.categoryCode,jdbcType=VARCHAR}
        </if>
        <if test="'subject'.toString() == column.value">
          #{item.subject,jdbcType=VARCHAR}
        </if>
        <if test="'created_by'.toString() == column.value">
          #{item.createdBy,jdbcType=VARCHAR}
        </if>
        <if test="'created_at'.toString() == column.value">
          #{item.createdAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'updated_by'.toString() == column.value">
          #{item.updatedBy,jdbcType=VARCHAR}
        </if>
        <if test="'updated_at'.toString() == column.value">
          #{item.updatedAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'version'.toString() == column.value">
          #{item.version,jdbcType=BIGINT}
        </if>
        <if test="'template_body'.toString() == column.value">
          #{item.templateBody,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsertSelective" parameterType="com.bigtreetc.mybatis.sample.domain.model.generated.MailTemplates">
    insert into mail_templates
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mailTemplateId != null">
        mail_template_id,
      </if>
      <if test="templateCode != null">
        template_code,
      </if>
      <if test="categoryCode != null">
        category_code,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="templateBody != null">
        template_body,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mailTemplateId != null">
        #{mailTemplateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="categoryCode != null">
        #{categoryCode,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="templateBody != null">
        #{templateBody,jdbcType=LONGVARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="mailTemplateId != null">
        mail_template_id = #{mailTemplateId,jdbcType=BIGINT},
      </if>
      <if test="templateCode != null">
        template_code = #{templateCode,jdbcType=VARCHAR},
      </if>
      <if test="categoryCode != null">
        category_code = #{categoryCode,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="templateBody != null">
        template_body = #{templateBody,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="upsert" parameterType="com.bigtreetc.mybatis.sample.domain.model.generated.MailTemplates">
    insert into mail_templates
    (mail_template_id, template_code, category_code, subject, created_by, created_at, 
      updated_by, updated_at, version)
    values
    (#{mailTemplateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{categoryCode,jdbcType=VARCHAR}, 
      #{subject,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=VARCHAR}, #{updatedAt,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}
      )
    on duplicate key update 
    mail_template_id = #{mailTemplateId,jdbcType=BIGINT}, 
    template_code = #{templateCode,jdbcType=VARCHAR}, 
    category_code = #{categoryCode,jdbcType=VARCHAR}, 
    subject = #{subject,jdbcType=VARCHAR}, 
    created_by = #{createdBy,jdbcType=VARCHAR}, 
    created_at = #{createdAt,jdbcType=TIMESTAMP}, 
    updated_by = #{updatedBy,jdbcType=VARCHAR}, 
    updated_at = #{updatedAt,jdbcType=TIMESTAMP}, 
    version = #{version,jdbcType=BIGINT}
  </insert>
  <insert id="upsertWithBLOBs" parameterType="com.bigtreetc.mybatis.sample.domain.model.generated.MailTemplates">
    insert into mail_templates
    (mail_template_id, template_code, category_code, subject, created_by, created_at, 
      updated_by, updated_at, version, template_body)
    values
    (#{mailTemplateId,jdbcType=BIGINT}, #{templateCode,jdbcType=VARCHAR}, #{categoryCode,jdbcType=VARCHAR}, 
      #{subject,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedBy,jdbcType=VARCHAR}, #{updatedAt,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}, 
      #{templateBody,jdbcType=LONGVARCHAR})
    on duplicate key update 
    mail_template_id = #{mailTemplateId,jdbcType=BIGINT}, 
    template_code = #{templateCode,jdbcType=VARCHAR}, 
    category_code = #{categoryCode,jdbcType=VARCHAR}, 
    subject = #{subject,jdbcType=VARCHAR}, 
    created_by = #{createdBy,jdbcType=VARCHAR}, 
    created_at = #{createdAt,jdbcType=TIMESTAMP}, 
    updated_by = #{updatedBy,jdbcType=VARCHAR}, 
    updated_at = #{updatedAt,jdbcType=TIMESTAMP}, 
    version = #{version,jdbcType=BIGINT}, 
    template_body = #{templateBody,jdbcType=LONGVARCHAR}
  </insert>
</mapper>