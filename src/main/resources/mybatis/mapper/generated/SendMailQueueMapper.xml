<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bigtreetc.sample.mybatis.domain.mapper.generated.SendMailQueueMapper">
  <resultMap id="BaseResultMap" type="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueue">
    <id column="send_mail_queue_id" jdbcType="BIGINT" property="id" />
    <id column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="from_address" jdbcType="VARCHAR" property="fromAddress" />
    <result column="to_address" jdbcType="VARCHAR" property="toAddress" />
    <result column="cc_address" jdbcType="VARCHAR" property="ccAddress" />
    <result column="bcc_address" jdbcType="VARCHAR" property="bccAddress" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="sent_at" jdbcType="TIMESTAMP" property="sentAt" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="version" jdbcType="BIGINT" property="version" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueue">
    <result column="body" jdbcType="LONGVARCHAR" property="body" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    send_mail_queue_id, created_at, from_address, to_address, cc_address, bcc_address, 
    subject, sent_at, created_by, updated_by, updated_at, version
  </sql>
  <sql id="Blob_Column_List">
    body
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueueExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from send_mail_queue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueueExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from send_mail_queue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueueKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from send_mail_queue
    where send_mail_queue_id = #{id,jdbcType=BIGINT}
      and created_at = #{createdAt,jdbcType=TIMESTAMP}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueueKey">
    delete from send_mail_queue
    where send_mail_queue_id = #{id,jdbcType=BIGINT}
      and created_at = #{createdAt,jdbcType=TIMESTAMP}
  </delete>
  <delete id="deleteByExample" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueueExample">
    delete from send_mail_queue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="send_mail_queue_id" keyProperty="id" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueue" useGeneratedKeys="true">
    insert into send_mail_queue (created_at, from_address, to_address, 
      cc_address, bcc_address, subject, 
      sent_at, created_by, updated_by, 
      updated_at, version, body
      )
    values (#{createdAt,jdbcType=TIMESTAMP}, #{fromAddress,jdbcType=VARCHAR}, #{toAddress,jdbcType=VARCHAR}, 
      #{ccAddress,jdbcType=VARCHAR}, #{bccAddress,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, 
      #{sentAt,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}, #{body,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="send_mail_queue_id" keyProperty="id" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueue" useGeneratedKeys="true">
    insert into send_mail_queue
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="fromAddress != null">
        from_address,
      </if>
      <if test="toAddress != null">
        to_address,
      </if>
      <if test="ccAddress != null">
        cc_address,
      </if>
      <if test="bccAddress != null">
        bcc_address,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="sentAt != null">
        sent_at,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="body != null">
        body,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="fromAddress != null">
        #{fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="toAddress != null">
        #{toAddress,jdbcType=VARCHAR},
      </if>
      <if test="ccAddress != null">
        #{ccAddress,jdbcType=VARCHAR},
      </if>
      <if test="bccAddress != null">
        #{bccAddress,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="sentAt != null">
        #{sentAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="body != null">
        #{body,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueueExample" resultType="java.lang.Long">
    select count(*) from send_mail_queue
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update send_mail_queue
    <set>
      <if test="record.id != null">
        send_mail_queue_id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fromAddress != null">
        from_address = #{record.fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.toAddress != null">
        to_address = #{record.toAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.ccAddress != null">
        cc_address = #{record.ccAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.bccAddress != null">
        bcc_address = #{record.bccAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.sentAt != null">
        sent_at = #{record.sentAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.body != null">
        body = #{record.body,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update send_mail_queue
    set send_mail_queue_id = #{record.id,jdbcType=BIGINT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      from_address = #{record.fromAddress,jdbcType=VARCHAR},
      to_address = #{record.toAddress,jdbcType=VARCHAR},
      cc_address = #{record.ccAddress,jdbcType=VARCHAR},
      bcc_address = #{record.bccAddress,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      sent_at = #{record.sentAt,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT},
      body = #{record.body,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update send_mail_queue
    set send_mail_queue_id = #{record.id,jdbcType=BIGINT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      from_address = #{record.fromAddress,jdbcType=VARCHAR},
      to_address = #{record.toAddress,jdbcType=VARCHAR},
      cc_address = #{record.ccAddress,jdbcType=VARCHAR},
      bcc_address = #{record.bccAddress,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      sent_at = #{record.sentAt,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueue">
    update send_mail_queue
    <set>
      <if test="fromAddress != null">
        from_address = #{fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="toAddress != null">
        to_address = #{toAddress,jdbcType=VARCHAR},
      </if>
      <if test="ccAddress != null">
        cc_address = #{ccAddress,jdbcType=VARCHAR},
      </if>
      <if test="bccAddress != null">
        bcc_address = #{bccAddress,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="sentAt != null">
        sent_at = #{sentAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="body != null">
        body = #{body,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where send_mail_queue_id = #{id,jdbcType=BIGINT}
      and created_at = #{createdAt,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueue">
    update send_mail_queue
    set from_address = #{fromAddress,jdbcType=VARCHAR},
      to_address = #{toAddress,jdbcType=VARCHAR},
      cc_address = #{ccAddress,jdbcType=VARCHAR},
      bcc_address = #{bccAddress,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      sent_at = #{sentAt,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      body = #{body,jdbcType=LONGVARCHAR}
    where send_mail_queue_id = #{id,jdbcType=BIGINT}
      and created_at = #{createdAt,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueue">
    update send_mail_queue
    set from_address = #{fromAddress,jdbcType=VARCHAR},
      to_address = #{toAddress,jdbcType=VARCHAR},
      cc_address = #{ccAddress,jdbcType=VARCHAR},
      bcc_address = #{bccAddress,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      sent_at = #{sentAt,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT}
    where send_mail_queue_id = #{id,jdbcType=BIGINT}
      and created_at = #{createdAt,jdbcType=TIMESTAMP}
  </update>
  <insert id="batchInsert" keyColumn="send_mail_queue_id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into send_mail_queue
    (created_at, from_address, to_address, cc_address, bcc_address, subject, sent_at, 
      created_by, updated_by, updated_at, version, body)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.createdAt,jdbcType=TIMESTAMP}, #{item.fromAddress,jdbcType=VARCHAR}, #{item.toAddress,jdbcType=VARCHAR}, 
        #{item.ccAddress,jdbcType=VARCHAR}, #{item.bccAddress,jdbcType=VARCHAR}, #{item.subject,jdbcType=VARCHAR}, 
        #{item.sentAt,jdbcType=TIMESTAMP}, #{item.createdBy,jdbcType=VARCHAR}, #{item.updatedBy,jdbcType=VARCHAR}, 
        #{item.updatedAt,jdbcType=TIMESTAMP}, #{item.version,jdbcType=BIGINT}, #{item.body,jdbcType=LONGVARCHAR}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="send_mail_queue_id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into send_mail_queue (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'created_at'.toString() == column.value">
          #{item.createdAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'from_address'.toString() == column.value">
          #{item.fromAddress,jdbcType=VARCHAR}
        </if>
        <if test="'to_address'.toString() == column.value">
          #{item.toAddress,jdbcType=VARCHAR}
        </if>
        <if test="'cc_address'.toString() == column.value">
          #{item.ccAddress,jdbcType=VARCHAR}
        </if>
        <if test="'bcc_address'.toString() == column.value">
          #{item.bccAddress,jdbcType=VARCHAR}
        </if>
        <if test="'subject'.toString() == column.value">
          #{item.subject,jdbcType=VARCHAR}
        </if>
        <if test="'sent_at'.toString() == column.value">
          #{item.sentAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'created_by'.toString() == column.value">
          #{item.createdBy,jdbcType=VARCHAR}
        </if>
        <if test="'updated_by'.toString() == column.value">
          #{item.updatedBy,jdbcType=VARCHAR}
        </if>
        <if test="'updated_at'.toString() == column.value">
          #{item.updatedAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'version'.toString() == column.value">
          #{item.version,jdbcType=BIGINT}
        </if>
        <if test="'body'.toString() == column.value">
          #{item.body,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsertSelective" keyColumn="send_mail_queue_id" keyProperty="id" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueue" useGeneratedKeys="true">
    insert into send_mail_queue
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        send_mail_queue_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="fromAddress != null">
        from_address,
      </if>
      <if test="toAddress != null">
        to_address,
      </if>
      <if test="ccAddress != null">
        cc_address,
      </if>
      <if test="bccAddress != null">
        bcc_address,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="sentAt != null">
        sent_at,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="body != null">
        body,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="fromAddress != null">
        #{fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="toAddress != null">
        #{toAddress,jdbcType=VARCHAR},
      </if>
      <if test="ccAddress != null">
        #{ccAddress,jdbcType=VARCHAR},
      </if>
      <if test="bccAddress != null">
        #{bccAddress,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="sentAt != null">
        #{sentAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="body != null">
        #{body,jdbcType=LONGVARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        send_mail_queue_id = #{id,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="fromAddress != null">
        from_address = #{fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="toAddress != null">
        to_address = #{toAddress,jdbcType=VARCHAR},
      </if>
      <if test="ccAddress != null">
        cc_address = #{ccAddress,jdbcType=VARCHAR},
      </if>
      <if test="bccAddress != null">
        bcc_address = #{bccAddress,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="sentAt != null">
        sent_at = #{sentAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="body != null">
        body = #{body,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="upsert" keyColumn="send_mail_queue_id" keyProperty="id" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueue" useGeneratedKeys="true">
    insert into send_mail_queue
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        send_mail_queue_id,
      </if>
      created_at,
      from_address,
      to_address,
      cc_address,
      bcc_address,
      subject,
      sent_at,
      created_by,
      updated_by,
      updated_at,
      version,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{createdAt,jdbcType=TIMESTAMP},
      #{fromAddress,jdbcType=VARCHAR},
      #{toAddress,jdbcType=VARCHAR},
      #{ccAddress,jdbcType=VARCHAR},
      #{bccAddress,jdbcType=VARCHAR},
      #{subject,jdbcType=VARCHAR},
      #{sentAt,jdbcType=TIMESTAMP},
      #{createdBy,jdbcType=VARCHAR},
      #{updatedBy,jdbcType=VARCHAR},
      #{updatedAt,jdbcType=TIMESTAMP},
      #{version,jdbcType=BIGINT},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        send_mail_queue_id = #{id,jdbcType=BIGINT},
      </if>
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      from_address = #{fromAddress,jdbcType=VARCHAR},
      to_address = #{toAddress,jdbcType=VARCHAR},
      cc_address = #{ccAddress,jdbcType=VARCHAR},
      bcc_address = #{bccAddress,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      sent_at = #{sentAt,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
    </trim>
  </insert>
  <insert id="upsertWithBLOBs" keyColumn="send_mail_queue_id" keyProperty="id" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueue" useGeneratedKeys="true">
    insert into send_mail_queue
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        send_mail_queue_id,
      </if>
      created_at,
      from_address,
      to_address,
      cc_address,
      bcc_address,
      subject,
      sent_at,
      created_by,
      updated_by,
      updated_at,
      version,
      body,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{createdAt,jdbcType=TIMESTAMP},
      #{fromAddress,jdbcType=VARCHAR},
      #{toAddress,jdbcType=VARCHAR},
      #{ccAddress,jdbcType=VARCHAR},
      #{bccAddress,jdbcType=VARCHAR},
      #{subject,jdbcType=VARCHAR},
      #{sentAt,jdbcType=TIMESTAMP},
      #{createdBy,jdbcType=VARCHAR},
      #{updatedBy,jdbcType=VARCHAR},
      #{updatedAt,jdbcType=TIMESTAMP},
      #{version,jdbcType=BIGINT},
      #{body,jdbcType=LONGVARCHAR},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        send_mail_queue_id = #{id,jdbcType=BIGINT},
      </if>
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      from_address = #{fromAddress,jdbcType=VARCHAR},
      to_address = #{toAddress,jdbcType=VARCHAR},
      cc_address = #{ccAddress,jdbcType=VARCHAR},
      bcc_address = #{bccAddress,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      sent_at = #{sentAt,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      body = #{body,jdbcType=LONGVARCHAR},
    </trim>
  </insert>
  <select id="selectWithCursorByExample" parameterType="com.bigtreetc.sample.mybatis.domain.model.generated.SendMailQueueExample" resultMap="BaseResultMap">
    select send_mail_queue_id, created_at, from_address, to_address, cc_address, bcc_address, 
    subject, sent_at, created_by, updated_by, updated_at, version, body
    from send_mail_queue
    <if test="_parameter != null">
      <where>
        <if test="_parameter != null and _parameter.oredCriteria != null">
          <foreach collection="_parameter.oredCriteria" item="criteria" separator="or">
            <if test="criteria.valid">
              <trim prefix="(" prefixOverrides="and" suffix=")">
                <foreach collection="criteria.criteria" item="criterion">
                  <choose>
                    <when test="criterion.noValue">
                      and ${criterion.condition}
                    </when>
                    <when test="criterion.singleValue">
                      and ${criterion.condition} #{criterion.value}
                    </when>
                    <when test="criterion.betweenValue">
                      and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                    </when>
                    <when test="criterion.listValue">
                      and ${criterion.condition}
                      <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                        #{listItem}
                      </foreach>
                    </when>
                  </choose>
                </foreach>
              </trim>
            </if>
          </foreach>
        </if>
      </where>
    </if>
  </select>
</mapper>